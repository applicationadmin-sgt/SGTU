# üöÄ Kubernetes Deployment Manifest
# Scalable Live Classroom System for 10,000+ concurrent users

apiVersion: v1
kind: Namespace
metadata:
  name: live-classroom
  labels:
    app: scalable-classroom

---
# üìä Redis StatefulSet for Socket.IO scaling
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: live-classroom
spec:
  serviceName: redis-cluster
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "2gb"
        - --maxmemory-policy
        - "allkeys-lru"
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        volumeMounts:
        - name: redis-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi

---
# üêò PostgreSQL StatefulSet for persistent data
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: live-classroom
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "liveclass_db"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_MAX_CONNECTIONS
          value: "500"
        - name: POSTGRES_SHARED_BUFFERS
          value: "512MB"
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi

---
# üì° Mediasoup SFU Deployment (Horizontally Scalable)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediasoup-sfu
  namespace: live-classroom
spec:
  replicas: 5  # Scale based on load
  selector:
    matchLabels:
      app: mediasoup-sfu
  template:
    metadata:
      labels:
        app: mediasoup-sfu
    spec:
      containers:
      - name: mediasoup
        image: your-registry/mediasoup-sfu:latest
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 10000
          name: rtc-start
          protocol: UDP
        - containerPort: 10100
          name: rtc-end
          protocol: UDP
        env:
        - name: NODE_ENV
          value: "production"
        - name: REDIS_URL
          value: "redis://redis-cluster:6379"
        - name: DB_HOST
          value: "postgres"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "liveclass_db"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: MEDIASOUP_MIN_PORT
          value: "10000"
        - name: MEDIASOUP_MAX_PORT
          value: "10100"
        - name: MEDIASOUP_ANNOUNCED_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
# ‚öõÔ∏è Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: live-classroom
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: your-registry/classroom-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_SOCKET_URL
          value: "https://classroom.yourdomain.com"
        - name: REACT_APP_API_URL
          value: "https://classroom.yourdomain.com/api"
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10

---
# üåê Services
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: live-classroom
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  clusterIP: None

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: live-classroom
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: mediasoup-sfu
  namespace: live-classroom
spec:
  selector:
    app: mediasoup-sfu
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  - name: rtc
    port: 10000
    targetPort: 10000
    protocol: UDP

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: live-classroom
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80

---
# üîí Secrets
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: live-classroom
type: Opaque
data:
  username: bGl2ZWNsYXNzX3VzZXI=  # base64: liveclass_user
  password: c2VjdXJlX3Bhc3N3b3Jk  # base64: secure_password

---
# üö™ Ingress with SSL
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: classroom-ingress
  namespace: live-classroom
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
spec:
  tls:
  - hosts:
    - classroom.yourdomain.com
    secretName: classroom-tls
  rules:
  - host: classroom.yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: mediasoup-sfu
            port:
              number: 3000
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: mediasoup-sfu
            port:
              number: 3000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80

---
# üìà Horizontal Pod Autoscaler for Mediasoup
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mediasoup-hpa
  namespace: live-classroom
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mediasoup-sfu
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# üîç Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: classroom-network-policy
  namespace: live-classroom
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: mediasoup-sfu
    - podSelector:
        matchLabels:
          app: frontend
  - from: []
    ports:
    - protocol: TCP
      port: 3000
    - protocol: UDP
      port: 10000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 80    # HTTP
    - protocol: UDP
      port: 53    # DNS

---
# üìä ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: classroom-config
  namespace: live-classroom
data:
  mediasoup.config.js: |
    module.exports = {
      workers: [
        {
          logLevel: 'warn',
          logTags: ['info', 'ice', 'dtls', 'rtp', 'srtp', 'rtcp'],
          rtcMinPort: 10000,
          rtcMaxPort: 10100,
        },
      ],
      
      mediaCodecs: [
        {
          kind: 'audio',
          mimeType: 'audio/opus',
          clockRate: 48000,
          channels: 2,
        },
        {
          kind: 'video',
          mimeType: 'video/VP8',
          clockRate: 90000,
          parameters: {
            'x-google-start-bitrate': 1000,
          },
        },
        {
          kind: 'video',
          mimeType: 'video/VP9',
          clockRate: 90000,
          parameters: {
            'profile-id': 2,
            'x-google-start-bitrate': 1000,
          },
        },
        {
          kind: 'video',
          mimeType: 'video/h264',
          clockRate: 90000,
          parameters: {
            'packetization-mode': 1,
            'profile-level-id': '4d0032',
            'level-asymmetry-allowed': 1,
            'x-google-start-bitrate': 1000,
          },
        },
      ],
    };

---
# üéØ Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mediasoup-pdb
  namespace: live-classroom
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mediasoup-sfu

---
# üìà ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: classroom-metrics
  namespace: live-classroom
spec:
  selector:
    matchLabels:
      app: mediasoup-sfu
  endpoints:
  - port: http
    path: /metrics